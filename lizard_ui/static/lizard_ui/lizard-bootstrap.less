// Our colors. Dark and middle green; light is gray.
@dark: #115e67;
@middle: #7fa9ae;
@light: #d9d9d6;

// Border color for bars that we colors with our light color.
@lightBorderColor: darken(@light, 10%);

// A green navbar. We customize bootstrap's navbar colors here.
@navbarBackground:                @dark;
@navbarBackgroundHighlight:       @middle;
@navbarText:                      @white;
@navbarLinkColor:                 @white;
@navbarLinkColorHover:            @light;

// Bootstrap's link color is used in a lot of places. I'd rather keep it blue,
// but just making it @dark is easier for customization.
@linkColor: @dark;

// Horizontal bar height. This 40px is somehow what comes out of bootstrap's
// calculations, but we just set it here. We need it for placement of the main
// elements.
@barHeight: 40px;

// Our horizontal bar class is basically the same as bootstrap's navbar, but
// without the bottom margin. And with the right height explicitly set.
.horizontal-bar {
  .navbar;
  margin-bottom: 0;  // Overrides .navbar's bottom margin.
  height: @barHeight;
  div, ul {
    // Divs nested inside us get the right height, too.
    height: @barHeight;
  }
}

// Blocks inside a horizontal bar (like the logo or below-sidebar) get a
// proper padding.
.block-in-bar {
  padding-left: @baseFontSize;
  padding-right: @baseFontSize;
}

// Arrangement of sidebar, content and footer.
// See http://blog.stevensanderson.com/2011/10/05/
// full-height-app-layouts-a-css-trick-to-make-it-easier/
.fullRow, .fullCol {
  overflow: hidden;
  position: absolute;
}
.fullRow {
  left: 0;
  right: 0;
}
.fullCol {
  top: 0;
  bottom: 0;
}
.scroll-y {
  overflow-y: auto;
  -webkit-overflow-scrolling: touch;
}

// Two variables to help with positioning. They include the 1px border.
@belowTopBars: 2 * @barHeight + 1;
@aboveFooter: @barHeight + 1;
// And we need the sidebar's width, too, for positioning.
@sidebarWidth: 300px;

// Top-most bar.
#logo-row {
  .horizontal-bar;
  #gradient > .vertical(lighten(@dark, 10%), @dark);
}

// Second bar, below the logo one.
#breadcrumb-row {
  .horizontal-bar;
  #gradient > .vertical(lighten(@light, 10%), @light);
  border-bottom: 1px solid @lightBorderColor;
}

// Bar at the bottom.
#footer {
  .horizontal-bar;
  #gradient > .vertical(@light, lighten(@light, 10%));
  border-top: 1px solid @lightBorderColor;
  // Placement. Full width and stuck to the bottom.
  .fullRow;
  bottom: 0;
}

// The sidebar sits beween the horizontal bars on the left. It is scrollable.
// TODO: do we actually want the full sidebar to be scrollable?? Or just a
// part of it?
#sidebar {
  .fullCol;
  .scroll-y;
  top: @belowTopBars;
  bottom: @aboveFooter;
  width: @sidebarWidth;
  #gradient > .vertical(lighten(@light, 10%), #fff);
  border-right: 1px solid @lightBorderColor;
}

// Keep the sidebar content out of the margins. It is all text, by definition.
#sidebar-inner {
  padding-left: @baseFontSize;
  padding-right: @baseFontSize;
}

// The main content area sits between the horizontal bars, next to the
// sidebar.
#content {
  .fullRow;
  top: @belowTopBars;
  left: @sidebarWidth;
  bottom: @aboveFooter;
}

// Every bar is divided into two; the following parts are floated to the left.
#logo,
#breadcrumbs,
#below-sidebar {
  .block-in-bar;
  float: left;
}

// The actions in the two bars at the top are floated right.
#site-actions,
#content-actions {
  .block-in-bar;
  float: right;
}

// The stuff in the bottom bar below the content is for orthogonal selection
//of settings related to the content, for example the date of the data that's
// displayed. It really belongs to the other selection choices that are made
// in the sidebar. So we want it to float left near the sidebar.
#orthogonal-selection {
  .block-in-bar;
  float: left;
}

// The orthogonal-selection floats left, so we need to give the below-sidebar
// some width to compensate. Sidebar width minus twice the padding.
#below-sidebar {
  width: @sidebarWidth - 2 * @baseFontSize;
}


// Lizard-specific stuff.

// In the sidebar, the headers are smaller and have the middle background
// color.
#sidebar {
  h2, h3 {
    font-size: @baseFontSize;
    #gradient > .vertical(lighten(@middle, 10%), @middle);
    margin-left: -@baseFontSize;
    margin-right: -@baseFontSize;
    padding-left: @baseFontSize;
    padding-right: @baseFontSize;
    line-height: 2 * @baseLineHeight;
    font-weight: bold;
  }
  h3 {
    #gradient > .vertical(lighten(@light, 10%), @light);
  }
}

// Textual content. #textual is for backwards compatibility.
#textual,
.textual-content {
  padding: @baseFontSize;
}

// Breadcrumbs fixes.
#breadcrumbs ul {
  margin-left: 0;
  li {
    display: inline;
    line-height: @barHeight;
    & .active {
      a {
        font-color: black;
      }
    }
  }
}

// We want button groups in the navbar (well, mostly in the
// orthogonal-selection bar). Best way to get them next to each other if there
// are multiple button groups is a toolbar. But we need to strip some margin
// off that.
.navbar {
  .btn-toolbar {
    margin-top: 0;
  }
}

// Black instead of white for the light second bar.
#content-actions {
  .nav > li > a {
    color: @grayDark;
  }
  .nav > li > a:hover {
    color: @dark;
  }
}
